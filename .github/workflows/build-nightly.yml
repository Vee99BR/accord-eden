name: "[B]uild a Mirror of Eden"
concurrency:
  group: build-eden-${{ github.ref }}
  cancel-in-progress: true

on:
  workflow_dispatch: {}

jobs:
  windows:
    runs-on: windows-2022
    name: "Windows (${{ matrix.target }})"
    strategy:
      matrix:
        include:
           - target: x86_64
             os: windows
             qt_arch_target: win64_msvc2022_64
             qt_arch_version: 6.9.2
    env:
      TARGET: ${{ matrix.target }}
      ARCH: ${{ matrix.target }}
      OS: ${{ matrix.os }}
      SCCACHE_GHA_ENABLED: "true"

    steps:
      - name: Clone eden-mirror
        uses: actions/checkout@v4
        with:
          repository: Vee99BR/eden-mirror
          submodules: recursive
          fetch-depth: 0

      - name: Configure Git identity
        shell: bash
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"

      - name: Cherry-pick fixes
        shell: bash
        run: |
          # Win32: CMakeLists.txt: Support ccache more openly
          git cherry-pick 8d5eed38feb03e87b869ab6de5aed0507253261c

      - name: Run sccache-cache
        uses: mozilla-actions/sccache-action@v0.0.9

      - name: Set up MSVC
        uses: ilammy/msvc-dev-cmd@v1
        with:
          arch: ${{ matrix.target }}

      - name: Install Qt
        uses: jurplel/install-qt-action@v4
        with:
          version: ${{ matrix.qt_arch_version }}
          host: ${{ matrix.os }}
          arch: ${{ matrix.qt_arch_target }}
          modules: qtmultimedia qt5compat
          cache: true
          add-tools-to-path: true

      - name: Install Vulkan SDK
        shell: pwsh
        run: .\.ci\windows\install-vulkan-sdk.ps1

      - name: Build Eden!
        shell: bash
        run: WINDEPLOYQT="$QT_ROOT_DIR/bin/windeployqt6.exe" .ci/windows/build.sh -DCMAKE_PREFIX_PATH="$QT_ROOT_DIR/lib/cmake/Qt6" -DCMAKE_C_COMPILER_LAUNCHER="sccache" -DCMAKE_CXX_COMPILER_LAUNCHER="sccache" -DUSE_CCACHE=ON -DYUZU_USE_BUNDLED_QT=OFF -DCMAKE_SYSTEM_PROCESSOR="${{ matrix.target }}"

      - name: Pack Eden!
        shell: bash
        run: ./.ci/windows/package.sh

      - name: Upload Windows artifacts
        uses: actions/upload-artifact@v4
        with:
          name: eden-windows-${{ matrix.target }}.zip
          path: artifacts/*

  linux:
    runs-on: ubuntu-24.04
    name: "Ubuntu (${{ matrix.target }})"
    strategy:
      matrix:
        include:
           - target: amd64
             os: linux
             qt_arch_target: linux_gcc_64
             qt_arch_version: 6.9.2
    env:
      TARGET: ${{ matrix.target }}
      ARCH: ${{ matrix.target }}
      OS: ${{ matrix.os }}
      SCCACHE_GHA_ENABLED: "true"

    steps:
      - name: Clone eden-mirror
        uses: actions/checkout@v4
        with:
          repository: Vee99BR/eden-mirror
          submodules: recursive
          fetch-depth: 0

      - name: Configure Git identity
        shell: bash
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"

      - name: Cherry-pick fixes
        shell: bash
        run: |
          # Win32: CMakeLists.txt: Support ccache more openly
          git cherry-pick 8d5eed38feb03e87b869ab6de5aed0507253261c
          # ffmpeg: proper drm detection
          git cherry-pick 64766669eeb4e7c740e61b851a383b6b880d2a01

      - name: Run sccache-cache
        uses: mozilla-actions/sccache-action@v0.0.9

      - name: Install Qt
        uses: jurplel/install-qt-action@v4
        with:
          version: ${{ matrix.qt_arch_version }}
          host: ${{ matrix.os }}
          arch: ${{ matrix.qt_arch_target }}
          modules: qtmultimedia qt5compat
          cache: true
          add-tools-to-path: true

      - name: Install dependencies with cache
        uses: awalsh128/cache-apt-pkgs-action@v1
        with:
          packages: autoconf cmake g++ gcc git glslang-tools libasound2 libboost-context-dev libdrm-dev libglu1-mesa-dev libhidapi-dev libpulse-dev libtool libudev-dev libxcb-icccm4 libxcb-image0 libxcb-keysyms1 libxcb-render-util0 libxcb-xinerama0 libxcb-xkb1 libxext-dev libxkbcommon-x11-0 mesa-common-dev nasm ninja-build qt6-base-private-dev libmbedtls-dev catch2 libfmt-dev liblz4-dev nlohmann-json3-dev libzstd-dev libssl-dev libavfilter-dev libavcodec-dev libswscale-dev pkg-config zlib1g-dev
          version: 1.01

      - name: Build Eden!
        shell: bash
        run: TARGET=appimage .ci/linux/build.sh ${{ matrix.target }} -DCMAKE_PREFIX_PATH="$QT_ROOT_DIR/lib/cmake/Qt6" -DCMAKE_C_COMPILER_LAUNCHER="sccache clang" -DCMAKE_CXX_COMPILER_LAUNCHER="sccache clang" -DUSE_CCACHE=ON -DYUZU_USE_BUNDLED_QT=OFF -DCMAKE_SYSTEM_PROCESSOR="${{ matrix.target }}"

      - name: Pack Eden!
        shell: bash
        run: DEVEL=true ./.ci/linux/package.sh

      - name: Upload Linux artifacts
        uses: actions/upload-artifact@v4
        with:
          name: eden-linux-${{ matrix.target }}.zip
          path: ./*.AppImage
